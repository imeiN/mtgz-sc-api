<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mtgz.xw.api.dao.mapper.CouponMapper" >

    <select id="selectByMap" resultType="com.mtgz.xw.api.dao.model.Coupon">
        select * from nideshop_coupon a
        where 1 = 1
        <if test="send_types != null">
            and send_type in
            <foreach item="item" collection="send_types" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="enabled != null and enabled == true">
            and a.use_end_date >= now()
            and now() >= a.use_start_date
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by a.id desc
            </otherwise>
        </choose>
    </select>

  <select id="queryUserCoupons" resultType="com.mtgz.xw.api.dao.model.Coupon">
    select a.*,b.coupon_number,b.user_id,b.coupon_status,b.id user_coupon_id
    from nideshop_coupon a
    left join nideshop_user_coupon b on a.id = b.coupon_id
    where 1 = 1
    <if test="user_id != null">
      and b.`user_id` = #{user_id}
    </if>
    <if test="send_type != null">
      and a.send_type = #{send_type}
    </if>
    <if test="coupon_status != null">
      and b.coupon_status = #{coupon_status}
    </if>
    <if test="coupon_number != null">
      and b.coupon_number = #{coupon_number}
    </if>
    <if test="source_key != null and source_key != ''">
      and b.source_key = #{source_key}
    </if>
    <if test="unUsed != null and unUsed == true">
      and b.used_time is null and (b.order_id  is null or b.order_id =0)
    </if>
    <choose>
      <when test="sidx != null and sidx.trim() != ''">
        order by ${sidx} ${order}
      </when>
      <otherwise>
        order by b.coupon_status asc
      </otherwise>
    </choose>
  </select>

    <select id="getUserCoupon" resultType="com.mtgz.xw.api.dao.model.Coupon">
        select a.*,b.coupon_number,b.user_id,b.coupon_status,b.id user_coupon_id
        from nideshop_coupon a
        left join nideshop_user_coupon b on a.id = b.coupon_id
        where 1 = 1
        and b.id = #{id}
    </select>

    <select id="queryMaxUserEnableCoupon" resultType="com.mtgz.xw.api.dao.model.Coupon">
        select a.`id`,
        a.`name`,
        a.`type_money` as type_money,
        a.`send_type`,
        a.`min_amount`,
        a.`max_amount`,
        a.`send_start_date`,
        a.`send_end_date`,
        a.`use_start_date`,
        a.`use_end_date`,
        a.`min_goods_amount`,
        a.min_transmit_num
        from nideshop_coupon a
        left join nideshop_coupon b on a.send_type = b.send_type and b.type_money > a.type_money
        where 1 = 1
        and a.use_end_date >= now()
        and now() >= a.use_start_date
        and b.id is null
        <if test="send_type != null">
            and a.send_type = #{send_type}
        </if>
        limit 0, 1
    </select>

    <select id="queryUserCouponList" resultType="com.mtgz.xw.api.dao.model.Coupon">
        select a.*,b.coupon_number,b.user_id
        from nideshop_coupon a
        left join nideshop_user_coupon b on a.id = b.coupon_id
        where 1 = 1
        and a.use_end_date >= now()
        and now() >= a.use_start_date
        and a.send_type in (1,4)
        and b.user_id = #{user_id} and b.order_id is null
    </select>

    <update id="updateUserCoupon" parameterType="com.mtgz.xw.api.dao.model.Coupon">
        update nideshop_user_coupon
        <set>
            <if test="coupon_status != null">`coupon_status` = #{coupon_status}</if>
        </set>
        where id = #{user_coupon_id}
    </update>

</mapper>