<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mtgz.xw.api.dao.mapper.KeywordsMapper" >

  <select id="selectByMap" parameterType="com.mtgz.xw.api.dao.model.Keywords">
    select
    <if test="fields != null and fields != ''">
      ${fields}
    </if>
    <if test="fields == null or fields == ''">
      *
    </if>
    from nideshop_keywords
    <where>
      <if test="keyword != null">
        and keyword like concat('%',#{keyword},'%')
      </if>
    </where>
    <choose>
      <when test="sidx != null and sidx.trim() != ''">
        order by ${sidx} ${order}
      </when>
      <otherwise>
        order by keyword desc
      </otherwise>
    </choose>
    <if test="offset != null and limit != null">
      limit #{offset}, #{limit}
    </if>
  </select>

  <select id="countByMap" resultType="int">
    select count(*) from nideshop_keywords
  </select>

  <insert id="save" parameterType="com.mtgz.xw.api.dao.model.Keywords">
    insert into nideshop_keywords
    (
    `keyword`,
    `is_hot`,
    `is_default`,
    `is_show`,
    `sort_order`,
    `scheme_url`,
    `id`,
    `type`
    )
    values
    (
    #{keyword},
    #{is_hot},
    #{is_default},
    #{is_show},
    #{sort_order},
    #{scheme_url},
    #{id},
    #{type}
    )
  </insert>

  <update id="update" parameterType="com.mtgz.xw.api.dao.model.Keywords">
    update nideshop_keywords
    <set>
      <if test="is_hot != null">`is_hot` = #{is_hot},</if>
      <if test="is_default != null">`is_default` = #{is_default},</if>
      <if test="is_show != null">`is_show` = #{is_show},</if>
      <if test="sort_order != null">`sort_order` = #{sort_order},</if>
      <if test="scheme_url != null">`scheme_url` = #{scheme_url},</if>
      <if test="id != null">`id` = #{id},</if>
      <if test="type != null">`type` = #{type}</if>
    </set>
    where keyword = #{keyword}
  </update>

  <!--<delete id="delete">-->
  <!--delete from nideshop_keywords where keyword = #{value}-->
  <!--</delete>-->

  <delete id="deleteBatch">
    delete from nideshop_keywords where keyword in
    <foreach item="keyword" collection="array" open="(" separator="," close=")">
      #{keyword}
    </foreach>
  </delete>
  <select id="hotKeywordList" resultType="map">
    select distinct keyword,is_hot from nideshop_keywords where 1 = 1 limit 0,10
  </select>

</mapper>